{
	"swagger": "2.0",
	"info": {
		"description": "Universal service broker management API",
		"version": "0.0.1",
		"title": "USB management api",
		"termsOfService": "https://github.com/hpcloud/cf-usb",
		"contact": {
			"email": "hcf-dev@hpe.com"
		},
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0.html"
		}
	},
	"securityDefinitions": {
		"Authorization": {
			"type": "apiKey",
			"in": "header",
			"name": "Authorization",
			"description": "UAA Token"
		}
	},
	"security": [{
		"Authorization": []
	}],
	"consumes": [
		"application/json"
	],
	"produces": [
		"application/json"
	],
	"paths": {
		"/update_catalog": {
			"post": {
				"description": "Updates the broker catalog\n",
				"operationId": "updateCatalog",
				"responses": {
					"200": {
						"description": "Successful response"
					},
					"500": {
						"description": "Unexpected error",
						"schema": {
							"type": "string"
						}
					}
				}
			}
		},
		"/info": {
			"get": {
				"description": "Gets information about the USB.\n",
				"operationId": "getInfo",
				"responses": {
					"200": {
						"description": "Successful response",
						"schema": {
							"$ref": "#/definitions/info"
						}
					},
					"500": {
						"description": "Unexpected error",
						"schema": {
							"type": "string"
						}
					}
				}
			}
		},
		"/instances": {
			"get": {
				"description": "Gets available instances",
				"operationId": "getInstances",
				"parameters": [],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/instance"
							}
						}
					},
					"500": {
						"description": "Unexpected error",
						"schema": {
							"type": "string"
						}
					}
				}
			},
			"post": {
				"description": "Create an instance",
				"operationId": "createInstance",
				"parameters": [{
					"name": "instance",
					"description": "Instance to be created",
					"in": "body",
					"required": true,
					"schema": {
						"$ref": "#/definitions/instance"
					}
				}],
				"responses": {
					"201": {
						"description": "Instance created",
						"schema": {
							"$ref": "#/definitions/instance"
						}
					},
					"409": {
						"description": "Conflict"
					},
					"500": {
						"description": "Unexpected error",
						"schema": {
							"type": "string"
						}
					}
				}
			}
		},
		"/instances/{instance_id}": {
			"get": {
				"description": "Gets instance configurations\n",
				"operationId": "getInstance",
				"parameters": [{
					"name": "instance_id",
					"in": "path",
					"description": "Instance ID",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/instance"
						}
					},
					"404": {
						"description": "Not Found"
					},
					"500": {
						"description": "Unexpected error",
						"schema": {
							"type": "string"
						}
					}
				}
			},
			"put": {
				"description": "Update an instance\n",
				"operationId": "updateInstance",
				"parameters": [{
					"name": "instance_id",
					"in": "path",
					"description": "Instance ID",
					"required": true,
					"type": "string"
				}, {
					"name": "instance_config",
					"in": "body",
					"description": "Add instance_config",
					"required": true,
					"schema": {
						"$ref": "#/definitions/instance"
					}
				}],
				"responses": {
					"200": {
						"description": "Sucessfull response",
						"schema": {
							"$ref": "#/definitions/instance"
						}
					},
					"404": {
						"description": "Not Found"
					},
					"409": {
						"description": "Conflict"
					},
					"500": {
						"description": "Unexpected error",
						"schema": {
							"type": "string"
						}
					}
				}
			},
			"delete": {
				"description": "Delete an instance",
				"operationId": "deleteInstance",
				"parameters": [{
					"name": "instance_id",
					"in": "path",
					"description": "Instance ID",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"204": {
						"description": "Instance deleted"
					},
					"404": {
						"description": "Not Found"
					},
					"500": {
						"description": "Unexpected error",
						"schema": {
							"type": "string"
						}
					}
				}
			}
		},
		"/instances/{instance_id}/ping": {
			"get": {
				"description": "Pings the instance\n",
				"operationId": "pingInstance",
				"parameters": [{
					"name": "instance_id",
					"in": "path",
					"description": "Instance ID",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "OK"
					},
					"404": {
						"description": "Not Found"
					},
					"500": {
						"description": "Unexpected error",
						"schema": {
							"type": "string"
						}
					}
				}
			}
		},
		"/services": {
			"get": {
				"description": "Gets the existing `service`\n",
				"operationId": "getServiceByInstanceId",
				"parameters": [{
					"name": "instance_id",
					"in": "query",
					"type": "string",
					"required": true,
					"description": "Instance ID"
				}],
				"responses": {
					"200": {
						"description": "Sucessfull response",
						"schema": {
							"$ref": "#/definitions/service"
						}
					},
					"500": {
						"description": "Unexpected error",
						"schema": {
							"type": "string"
						}
					}
				}
			}
		},
		"/services/{service_id}": {
			"get": {
				"description": "Gets the `service` with the id **serviceID**",
				"operationId": "getService",
				"parameters": [{
					"name": "service_id",
					"in": "path",
					"description": "ID of the service",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "Sucessfull response",
						"schema": {
							"$ref": "#/definitions/service"
						}
					},
					"404": {
						"description": "Not Found"
					},
					"500": {
						"description": "Unexpected error",
						"schema": {
							"type": "string"
						}
					}
				}
			},
			"put": {
				"description": "Updates the `service` with the id **serviceID**",
				"operationId": "updateService",
				"parameters": [{
					"name": "service_id",
					"in": "path",
					"description": "ID of the service",
					"required": true,
					"type": "string"
				}, {
					"name": "service",
					"in": "body",
					"description": "Update service",
					"required": true,
					"schema": {
						"$ref": "#/definitions/service"
					}
				}],
				"responses": {
					"200": {
						"description": "Sucessfull response",
						"schema": {
							"$ref": "#/definitions/service"
						}
					},
					"404": {
						"description": "Not Found"
					},
					"409": {
						"description": "Conflict"
					},
					"500": {
						"description": "Unexpected error",
						"schema": {
							"type": "string"
						}
					}
				}
			}
		},
		"/plans": {
			"get": {
				"description": "Gets `plans`",
				"operationId": "getServicePlans",
				"parameters": [{
					"name": "instance_id",
					"in": "query",
					"type": "string",
					"required": false,
					"description": "Instance ID"
				}],
				"responses": {
					"200": {
						"description": "Sucessfull response",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/plan"
							}
						}
					},
					"500": {
						"description": "Unexpected error",
						"schema": {
							"type": "string"
						}
					}
				}
			}
		},
		"/plans/{plan_id}": {
			"get": {
				"description": "Gets the `plan` with the **planID**",
				"operationId": "getServicePlan",
				"parameters": [{
					"name": "plan_id",
					"in": "path",
					"description": "ID of the plan",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "Sucessfull response",
						"schema": {
							"$ref": "#/definitions/plan"
						}
					},
					"404": {
						"description": "Not Found"
					},
					"500": {
						"description": "Unexpected error",
						"schema": {
							"type": "string"
						}
					}
				}
			},
			"put": {
				"description": "Updates the plan with the id **planID** for the service id **serviceID**",
				"operationId": "updateServicePlan",
				"parameters": [{
					"name": "plan_id",
					"in": "path",
					"description": "ID of the plan",
					"required": true,
					"type": "string"
				}, {
					"name": "plan",
					"in": "body",
					"description": "Update plan",
					"required": true,
					"schema": {
						"$ref": "#/definitions/plan"
					}
				}],
				"responses": {
					"200": {
						"description": "Sucessfull response",
						"schema": {
							"$ref": "#/definitions/plan"
						}
					},
					"404": {
						"description": "Not Found"
					},
					"500": {
						"description": "Unexpected error",
						"schema": {
							"type": "string"
						}
					}
				}
			}
		},
		"/dials": {
			"get": {
				"description": "Gets `dials`",
				"operationId": "getAllDials",
				"parameters": [{
					"name": "instance_id",
					"in": "query",
					"type": "string",
					"required": false,
					"description": "Instance ID"
				}],
				"responses": {
					"200": {
						"description": "Sucessfull response",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/dial"
							}
						}
					},
					"500": {
						"description": "Unexpected error",
						"schema": {
							"type": "string"
						}
					}
				}
			},
			"post": {
				"description": "Create a dial for",
				"operationId": "createDial",
				"parameters": [{
					"name": "dial",
					"in": "body",
					"description": "New dial",
					"required": true,
					"schema": {
						"$ref": "#/definitions/dial"
					}
				}],
				"responses": {
					"201": {
						"description": "Sucessfull response",
						"schema": {
							"$ref": "#/definitions/dial"
						}
					},
					"500": {
						"description": "Unexpected error",
						"schema": {
							"type": "string"
						}
					}
				}
			}
		},
		"/dials/{dial_id}": {
			"get": {
				"description": "Gets the `dial` with the **dial_id**",
				"operationId": "getDial",
				"parameters": [{
					"name": "dial_id",
					"in": "path",
					"description": "ID of the dial",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"200": {
						"description": "Sucessfull response",
						"schema": {
							"$ref": "#/definitions/dial"
						}
					},
					"404": {
						"description": "Not Found"
					},
					"500": {
						"description": "Unexpected error",
						"schema": {
							"type": "string"
						}
					}
				}
			},
			"put": {
				"description": "Updates the dial with the id **dial_id**",
				"operationId": "updateDial",
				"parameters": [{
					"name": "dial_id",
					"in": "path",
					"description": "ID of the dial",
					"required": true,
					"type": "string"
				}, {
					"name": "dial",
					"in": "body",
					"description": "Updated dial",
					"required": true,
					"schema": {
						"$ref": "#/definitions/dial"
					}
				}],
				"responses": {
					"200": {
						"description": "Sucessfull response",
						"schema": {
							"$ref": "#/definitions/dial"
						}
					},
					"404": {
						"description": "Not Found"
					},
					"500": {
						"description": "Unexpected error",
						"schema": {
							"type": "string"
						}
					}
				}
			},
			"delete": {
				"description": "Delets the `dial` with the **dial_id**",
				"operationId": "deleteDial",
				"parameters": [{
					"name": "dial_id",
					"in": "path",
					"description": "ID of the dial",
					"required": true,
					"type": "string"
				}],
				"responses": {
					"204": {
						"description": "Sucessfull response"
					},
					"404": {
						"description": "Not Found"
					},
					"500": {
						"description": "Unexpected error",
						"schema": {
							"type": "string"
						}
					}
				}
			}
		}
	},
	"definitions": {
		"info": {
			"type": "object",
			"required": [
				"broker_api_version",
				"usb_version"
			],
			"properties": {
				"broker_api_version": {
					"type": "string"
				},
				"usb_version": {
					"type": "string"
				}
			}
		},
		"service": {
			"type": "object",
			"required": [
				"instance_id",
				"name"
			],
			"properties": {
				"id": {
					"type": "string"
				},
				"instance_id": {
					"type": "string",
					"minLength": 36,
					"maxLength": 36
				},
				"bindable": {
					"type": "boolean"
				},
				"name": {
					"type": "string",
					"minLength": 3,
					"maxLength": 50
				},
				"description": {
					"type": "string"
				},
				"tags": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"metadata": {
					"type": "object"
				}
			}
		},
		"plan": {
			"type": "object",
			"required": [
				"dial_id",
				"name"
			],
			"properties": {
				"name": {
					"type": "string",
					"minLength": 3,
					"maxLength": 50
				},
				"id": {
					"type": "string"
				},
				"dial_id": {
					"type": "string",
					"minLength": 36,
					"maxLength": 36
				},
				"description": {
					"type": "string"
				},
				"free": {
					"type": "boolean"
				}
			}
		},
		"dial": {
			"type": "object",
			"required": [
				"instance_id"
			],
			"properties": {
				"id": {
					"type": "string"
				},
				"instance_id": {
					"type": "string",
					"minLength": 36,
					"maxLength": 36
				},
				"configuration": {
					"type": "object"
				},
				"plan": {
					"type": "string"
				}
			}
		},
		"instance": {
			"type": "object",
			"required": [
				"name"
			],
			"properties": {
				"id": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"targetURL": {
					"type": "string"
				},
				"configuration": {
					"type": "object"
				},
				"dials": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"service": {
					"type": "string"
				}
			}
		},
		"dial_schema": {
			"type": "string"
		}
	}
}
package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-swagger/go-swagger/httpkit"

	"github.com/hpcloud/cf-usb/lib/genmodel"
)

/*GetServicePlanOK Sucessfull response

swagger:response getServicePlanOK
*/
type GetServicePlanOK struct {

	// In: body
	Payload *genmodel.Plan `json:"body,omitempty"`
}

// NewGetServicePlanOK creates GetServicePlanOK with default headers values
func NewGetServicePlanOK() *GetServicePlanOK {
	return &GetServicePlanOK{}
}

// WithPayload adds the payload to the get service plan o k response
func (o *GetServicePlanOK) WithPayload(payload *genmodel.Plan) *GetServicePlanOK {
	o.Payload = payload
	return o
}

// WriteResponse to the client
func (o *GetServicePlanOK) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetServicePlanNotFound Not Found

swagger:response getServicePlanNotFound
*/
type GetServicePlanNotFound struct {
}

// NewGetServicePlanNotFound creates GetServicePlanNotFound with default headers values
func NewGetServicePlanNotFound() *GetServicePlanNotFound {
	return &GetServicePlanNotFound{}
}

// WriteResponse to the client
func (o *GetServicePlanNotFound) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(404)
}

/*GetServicePlanInternalServerError Unexpected error

swagger:response getServicePlanInternalServerError
*/
type GetServicePlanInternalServerError struct {

	// In: body
	Payload string `json:"body,omitempty"`
}

// NewGetServicePlanInternalServerError creates GetServicePlanInternalServerError with default headers values
func NewGetServicePlanInternalServerError() *GetServicePlanInternalServerError {
	return &GetServicePlanInternalServerError{}
}

// WithPayload adds the payload to the get service plan internal server error response
func (o *GetServicePlanInternalServerError) WithPayload(payload string) *GetServicePlanInternalServerError {
	o.Payload = payload
	return o
}

// WriteResponse to the client
func (o *GetServicePlanInternalServerError) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(500)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

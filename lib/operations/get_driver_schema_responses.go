package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-swagger/go-swagger/httpkit"

	"github.com/hpcloud/cf-usb/lib/genmodel"
)

/*GetDriverSchemaOK OK

swagger:response getDriverSchemaOK
*/
type GetDriverSchemaOK struct {

	// In: body
	Payload genmodel.DriverSchema `json:"body,omitempty"`
}

// NewGetDriverSchemaOK creates GetDriverSchemaOK with default headers values
func NewGetDriverSchemaOK() *GetDriverSchemaOK {
	return &GetDriverSchemaOK{}
}

// WithPayload adds the payload to the get driver schema o k response
func (o *GetDriverSchemaOK) WithPayload(payload genmodel.DriverSchema) *GetDriverSchemaOK {
	o.Payload = payload
	return o
}

// WriteResponse to the client
func (o *GetDriverSchemaOK) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*GetDriverSchemaNotFound Not Found

swagger:response getDriverSchemaNotFound
*/
type GetDriverSchemaNotFound struct {
}

// NewGetDriverSchemaNotFound creates GetDriverSchemaNotFound with default headers values
func NewGetDriverSchemaNotFound() *GetDriverSchemaNotFound {
	return &GetDriverSchemaNotFound{}
}

// WriteResponse to the client
func (o *GetDriverSchemaNotFound) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(404)
}

/*GetDriverSchemaInternalServerError Unexpected error

swagger:response getDriverSchemaInternalServerError
*/
type GetDriverSchemaInternalServerError struct {

	// In: body
	Payload string `json:"body,omitempty"`
}

// NewGetDriverSchemaInternalServerError creates GetDriverSchemaInternalServerError with default headers values
func NewGetDriverSchemaInternalServerError() *GetDriverSchemaInternalServerError {
	return &GetDriverSchemaInternalServerError{}
}

// WithPayload adds the payload to the get driver schema internal server error response
func (o *GetDriverSchemaInternalServerError) WithPayload(payload string) *GetDriverSchemaInternalServerError {
	o.Payload = payload
	return o
}

// WriteResponse to the client
func (o *GetDriverSchemaInternalServerError) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(500)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

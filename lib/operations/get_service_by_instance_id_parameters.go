package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/middleware"
	"github.com/go-swagger/go-swagger/httpkit/validate"
	"github.com/go-swagger/go-swagger/strfmt"
)

// GetServiceByInstanceIDParams contains all the bound params for the get service by instance id operation
// typically these are obtained from a http.Request
//
// swagger:parameters getServiceByInstanceId
type GetServiceByInstanceIDParams struct {
	/* Driver instance ID
	Required: true
	In: query
	*/
	DriverInstanceID string
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls
func (o *GetServiceByInstanceIDParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error
	qs := r.URL.Query()

	if err := o.bindDriverInstanceID(qs.Get("driver_instance_id"), route.Formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetServiceByInstanceIDParams) bindDriverInstanceID(raw string, formats strfmt.Registry) error {
	if err := validate.RequiredString("driver_instance_id", "query", raw); err != nil {
		return err
	}

	o.DriverInstanceID = raw

	return nil
}

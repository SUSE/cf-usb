package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-swagger/go-swagger/httpkit"

	"github.com/hpcloud/cf-usb/lib/genmodel"
)

/*UpdateServicePlanOK Sucessfull response

swagger:response updateServicePlanOK
*/
type UpdateServicePlanOK struct {

	// In: body
	Payload *genmodel.Plan `json:"body,omitempty"`
}

// NewUpdateServicePlanOK creates UpdateServicePlanOK with default headers values
func NewUpdateServicePlanOK() *UpdateServicePlanOK {
	return &UpdateServicePlanOK{}
}

// WithPayload adds the payload to the update service plan o k response
func (o *UpdateServicePlanOK) WithPayload(payload *genmodel.Plan) *UpdateServicePlanOK {
	o.Payload = payload
	return o
}

// WriteResponse to the client
func (o *UpdateServicePlanOK) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UpdateServicePlanNotFound Not Found

swagger:response updateServicePlanNotFound
*/
type UpdateServicePlanNotFound struct {
}

// NewUpdateServicePlanNotFound creates UpdateServicePlanNotFound with default headers values
func NewUpdateServicePlanNotFound() *UpdateServicePlanNotFound {
	return &UpdateServicePlanNotFound{}
}

// WriteResponse to the client
func (o *UpdateServicePlanNotFound) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(404)
}

/*UpdateServicePlanInternalServerError Unexpected error

swagger:response updateServicePlanInternalServerError
*/
type UpdateServicePlanInternalServerError struct {

	// In: body
	Payload string `json:"body,omitempty"`
}

// NewUpdateServicePlanInternalServerError creates UpdateServicePlanInternalServerError with default headers values
func NewUpdateServicePlanInternalServerError() *UpdateServicePlanInternalServerError {
	return &UpdateServicePlanInternalServerError{}
}

// WithPayload adds the payload to the update service plan internal server error response
func (o *UpdateServicePlanInternalServerError) WithPayload(payload string) *UpdateServicePlanInternalServerError {
	o.Payload = payload
	return o
}

// WriteResponse to the client
func (o *UpdateServicePlanInternalServerError) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(500)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

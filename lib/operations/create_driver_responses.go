package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/hpcloud/cf-usb/lib/genmodel"
)

/*CreateDriverCreated Driver created

swagger:response createDriverCreated
*/
type CreateDriverCreated struct {

	// In: body
	Payload *genmodel.Driver `json:"body,omitempty"`
}

// NewCreateDriverCreated creates CreateDriverCreated with default headers values
func NewCreateDriverCreated() *CreateDriverCreated {
	return &CreateDriverCreated{}
}

// WithPayload adds the payload to the create driver created response
func (o *CreateDriverCreated) WithPayload(payload *genmodel.Driver) *CreateDriverCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create driver created response
func (o *CreateDriverCreated) SetPayload(payload *genmodel.Driver) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateDriverCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CreateDriverConflict A driver with the same type already exists

swagger:response createDriverConflict
*/
type CreateDriverConflict struct {
}

// NewCreateDriverConflict creates CreateDriverConflict with default headers values
func NewCreateDriverConflict() *CreateDriverConflict {
	return &CreateDriverConflict{}
}

// WriteResponse to the client
func (o *CreateDriverConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
}

/*CreateDriverInternalServerError Unexpected error

swagger:response createDriverInternalServerError
*/
type CreateDriverInternalServerError struct {

	// In: body
	Payload string `json:"body,omitempty"`
}

// NewCreateDriverInternalServerError creates CreateDriverInternalServerError with default headers values
func NewCreateDriverInternalServerError() *CreateDriverInternalServerError {
	return &CreateDriverInternalServerError{}
}

// WithPayload adds the payload to the create driver internal server error response
func (o *CreateDriverInternalServerError) WithPayload(payload string) *CreateDriverInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create driver internal server error response
func (o *CreateDriverInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateDriverInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

package workspace

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/hpcloud/cf-usb/lib/csm/models"
)

// GetWorkspaceReader is a Reader for the GetWorkspace structure.
type GetWorkspaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetWorkspaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetWorkspaceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetWorkspaceDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewGetWorkspaceOK creates a GetWorkspaceOK with default headers values
func NewGetWorkspaceOK() *GetWorkspaceOK {
	return &GetWorkspaceOK{}
}

/*GetWorkspaceOK handles this case with default header values.

details of specified Workspace
*/
type GetWorkspaceOK struct {
	Payload *models.ServiceManagerWorkspaceResponse
}

func (o *GetWorkspaceOK) Error() string {
	return fmt.Sprintf("[GET /workspaces/{workspace_id}][%d] getWorkspaceOK  %+v", 200, o.Payload)
}

func (o *GetWorkspaceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceManagerWorkspaceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkspaceDefault creates a GetWorkspaceDefault with default headers values
func NewGetWorkspaceDefault(code int) *GetWorkspaceDefault {
	return &GetWorkspaceDefault{
		_statusCode: code,
	}
}

/*GetWorkspaceDefault handles this case with default header values.

generic error response
*/
type GetWorkspaceDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get workspace default response
func (o *GetWorkspaceDefault) Code() int {
	return o._statusCode
}

func (o *GetWorkspaceDefault) Error() string {
	return fmt.Sprintf("[GET /workspaces/{workspace_id}][%d] getWorkspace default  %+v", o._statusCode, o.Payload)
}

func (o *GetWorkspaceDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

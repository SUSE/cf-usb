package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetServiceInstancesInstanceIDLastOperationParams creates a new GetServiceInstancesInstanceIDLastOperationParams object
// with the default values initialized.
func NewGetServiceInstancesInstanceIDLastOperationParams() GetServiceInstancesInstanceIDLastOperationParams {
	var ()
	return GetServiceInstancesInstanceIDLastOperationParams{}
}

// GetServiceInstancesInstanceIDLastOperationParams contains all the bound params for the get service instances instance ID last operation operation
// typically these are obtained from a http.Request
//
// swagger:parameters GetServiceInstancesInstanceIDLastOperation
type GetServiceInstancesInstanceIDLastOperationParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request

	/*The instance_id of a service instance is provided by the Cloud Controller. This ID will be used for future requests (bind and deprovision), so the broker must use it to correlate the resource it creates.
	  Required: true
	  In: path
	*/
	InstanceID string
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls
func (o *GetServiceInstancesInstanceIDLastOperationParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error
	o.HTTPRequest = r

	rInstanceID, rhkInstanceID, _ := route.Params.GetOK("instance_id")
	if err := o.bindInstanceID(rInstanceID, rhkInstanceID, route.Formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetServiceInstancesInstanceIDLastOperationParams) bindInstanceID(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	o.InstanceID = raw

	return nil
}

package service_instances

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/hpcloud/cf-usb/lib/brokermodel"
)

/*DeprovisionServiceInstanceOK Service instance was deleted. The expected response body is {}.

swagger:response deprovisionServiceInstanceOK
*/
type DeprovisionServiceInstanceOK struct {

	// In: body
	Payload brokermodel.Empty `json:"body,omitempty"`
}

// NewDeprovisionServiceInstanceOK creates DeprovisionServiceInstanceOK with default headers values
func NewDeprovisionServiceInstanceOK() *DeprovisionServiceInstanceOK {
	return &DeprovisionServiceInstanceOK{}
}

// WithPayload adds the payload to the deprovision service instance o k response
func (o *DeprovisionServiceInstanceOK) WithPayload(payload brokermodel.Empty) *DeprovisionServiceInstanceOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deprovision service instance o k response
func (o *DeprovisionServiceInstanceOK) SetPayload(payload brokermodel.Empty) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeprovisionServiceInstanceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*DeprovisionServiceInstanceAccepted Service instance update is in progress. This triggers Cloud Controller to poll the Service Instance Last Operation Endpoint for operation status.

swagger:response deprovisionServiceInstanceAccepted
*/
type DeprovisionServiceInstanceAccepted struct {

	// In: body
	Payload brokermodel.Empty `json:"body,omitempty"`
}

// NewDeprovisionServiceInstanceAccepted creates DeprovisionServiceInstanceAccepted with default headers values
func NewDeprovisionServiceInstanceAccepted() *DeprovisionServiceInstanceAccepted {
	return &DeprovisionServiceInstanceAccepted{}
}

// WithPayload adds the payload to the deprovision service instance accepted response
func (o *DeprovisionServiceInstanceAccepted) WithPayload(payload brokermodel.Empty) *DeprovisionServiceInstanceAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deprovision service instance accepted response
func (o *DeprovisionServiceInstanceAccepted) SetPayload(payload brokermodel.Empty) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeprovisionServiceInstanceAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*DeprovisionServiceInstanceGone Should be returned if the binding does not exist. The expected response body is {}.

swagger:response deprovisionServiceInstanceGone
*/
type DeprovisionServiceInstanceGone struct {

	// In: body
	Payload brokermodel.Empty `json:"body,omitempty"`
}

// NewDeprovisionServiceInstanceGone creates DeprovisionServiceInstanceGone with default headers values
func NewDeprovisionServiceInstanceGone() *DeprovisionServiceInstanceGone {
	return &DeprovisionServiceInstanceGone{}
}

// WithPayload adds the payload to the deprovision service instance gone response
func (o *DeprovisionServiceInstanceGone) WithPayload(payload brokermodel.Empty) *DeprovisionServiceInstanceGone {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deprovision service instance gone response
func (o *DeprovisionServiceInstanceGone) SetPayload(payload brokermodel.Empty) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeprovisionServiceInstanceGone) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(410)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*DeprovisionServiceInstanceUnprocessableEntity Should be returned if the broker only supports asynchronous deprovisioning for the requested plan and the request did not include ?accepts_incomplete=true

swagger:response deprovisionServiceInstanceUnprocessableEntity
*/
type DeprovisionServiceInstanceUnprocessableEntity struct {

	// In: body
	Payload *brokermodel.AsyncError `json:"body,omitempty"`
}

// NewDeprovisionServiceInstanceUnprocessableEntity creates DeprovisionServiceInstanceUnprocessableEntity with default headers values
func NewDeprovisionServiceInstanceUnprocessableEntity() *DeprovisionServiceInstanceUnprocessableEntity {
	return &DeprovisionServiceInstanceUnprocessableEntity{}
}

// WithPayload adds the payload to the deprovision service instance unprocessable entity response
func (o *DeprovisionServiceInstanceUnprocessableEntity) WithPayload(payload *brokermodel.AsyncError) *DeprovisionServiceInstanceUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deprovision service instance unprocessable entity response
func (o *DeprovisionServiceInstanceUnprocessableEntity) SetPayload(payload *brokermodel.AsyncError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeprovisionServiceInstanceUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

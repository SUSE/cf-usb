package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetServiceInstancesInstanceIDLastOperationHandlerFunc turns a function with the right signature into a get service instances instance ID last operation handler
type GetServiceInstancesInstanceIDLastOperationHandlerFunc func(GetServiceInstancesInstanceIDLastOperationParams, interface{}) middleware.Responder

// Handle executing the request and returning a response
func (fn GetServiceInstancesInstanceIDLastOperationHandlerFunc) Handle(params GetServiceInstancesInstanceIDLastOperationParams, principal interface{}) middleware.Responder {
	return fn(params, principal)
}

// GetServiceInstancesInstanceIDLastOperationHandler interface for that can handle valid get service instances instance ID last operation params
type GetServiceInstancesInstanceIDLastOperationHandler interface {
	Handle(GetServiceInstancesInstanceIDLastOperationParams, interface{}) middleware.Responder
}

// NewGetServiceInstancesInstanceIDLastOperation creates a new http.Handler for the get service instances instance ID last operation operation
func NewGetServiceInstancesInstanceIDLastOperation(ctx *middleware.Context, handler GetServiceInstancesInstanceIDLastOperationHandler) *GetServiceInstancesInstanceIDLastOperation {
	return &GetServiceInstancesInstanceIDLastOperation{Context: ctx, Handler: handler}
}

/*GetServiceInstancesInstanceIDLastOperation swagger:route GET /service_instances/{instance_id}/last_operation getServiceInstancesInstanceIdLastOperation

Polling Last Operation (async only)

When a broker returns status code 202 ACCEPTED for provision, update, or deprovision, Cloud Foundry will begin to poll the /v2/service_instances/:guid/last_operation endpoint to obtain the state of the last requested operation. The broker response must contain the field state and an optional field description.

*/
type GetServiceInstancesInstanceIDLastOperation struct {
	Context *middleware.Context
	Handler GetServiceInstancesInstanceIDLastOperationHandler
}

func (o *GetServiceInstancesInstanceIDLastOperation) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetServiceInstancesInstanceIDLastOperationParams()

	uprinc, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	var principal interface{}
	if uprinc != nil {
		principal = uprinc
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

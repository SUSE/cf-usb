package brokermodel

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

/*MetaData metadata related to the service

swagger:model Meta_data
*/
type MetaData struct {

	/* displayName of the service.
	 */
	DisplayName string `json:"displayName,omitempty"`

	/* listing
	 */
	Listing *Listing `json:"listing,omitempty"`

	/* provider
	 */
	Provider *Provider `json:"provider,omitempty"`
}

// Validate validates this meta data
func (m *MetaData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateListing(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateProvider(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MetaData) validateListing(formats strfmt.Registry) error {

	if swag.IsZero(m.Listing) { // not required
		return nil
	}

	if m.Listing != nil {

		if err := m.Listing.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *MetaData) validateProvider(formats strfmt.Registry) error {

	if swag.IsZero(m.Provider) { // not required
		return nil
	}

	if m.Provider != nil {

		if err := m.Provider.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

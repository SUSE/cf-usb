package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/hpcloud/cf-usb/lib/genmodel"
)

/*RegisterDriverEndpointCreated Driver endpoint registered

swagger:response registerDriverEndpointCreated
*/
type RegisterDriverEndpointCreated struct {

	// In: body
	Payload *genmodel.DriverEndpoint `json:"body,omitempty"`
}

// NewRegisterDriverEndpointCreated creates RegisterDriverEndpointCreated with default headers values
func NewRegisterDriverEndpointCreated() *RegisterDriverEndpointCreated {
	return &RegisterDriverEndpointCreated{}
}

// WithPayload adds the payload to the register driver endpoint created response
func (o *RegisterDriverEndpointCreated) WithPayload(payload *genmodel.DriverEndpoint) *RegisterDriverEndpointCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register driver endpoint created response
func (o *RegisterDriverEndpointCreated) SetPayload(payload *genmodel.DriverEndpoint) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterDriverEndpointCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*RegisterDriverEndpointConflict Conflict

swagger:response registerDriverEndpointConflict
*/
type RegisterDriverEndpointConflict struct {

	// In: body
	Payload string `json:"body,omitempty"`
}

// NewRegisterDriverEndpointConflict creates RegisterDriverEndpointConflict with default headers values
func NewRegisterDriverEndpointConflict() *RegisterDriverEndpointConflict {
	return &RegisterDriverEndpointConflict{}
}

// WithPayload adds the payload to the register driver endpoint conflict response
func (o *RegisterDriverEndpointConflict) WithPayload(payload string) *RegisterDriverEndpointConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register driver endpoint conflict response
func (o *RegisterDriverEndpointConflict) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterDriverEndpointConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*RegisterDriverEndpointInternalServerError Unexpected error

swagger:response registerDriverEndpointInternalServerError
*/
type RegisterDriverEndpointInternalServerError struct {

	// In: body
	Payload string `json:"body,omitempty"`
}

// NewRegisterDriverEndpointInternalServerError creates RegisterDriverEndpointInternalServerError with default headers values
func NewRegisterDriverEndpointInternalServerError() *RegisterDriverEndpointInternalServerError {
	return &RegisterDriverEndpointInternalServerError{}
}

// WithPayload adds the payload to the register driver endpoint internal server error response
func (o *RegisterDriverEndpointInternalServerError) WithPayload(payload string) *RegisterDriverEndpointInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register driver endpoint internal server error response
func (o *RegisterDriverEndpointInternalServerError) SetPayload(payload string) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterDriverEndpointInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

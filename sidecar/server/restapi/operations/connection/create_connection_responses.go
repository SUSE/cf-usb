package connection

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/hpcloud/cf-usb/sidecar/server/models"
)

/*CreateConnectionCreated create connection

swagger:response createConnectionCreated
*/
type CreateConnectionCreated struct {

	// In: body
	Payload *models.ServiceManagerConnectionResponse `json:"body,omitempty"`
}

// NewCreateConnectionCreated creates CreateConnectionCreated with default headers values
func NewCreateConnectionCreated() *CreateConnectionCreated {
	return &CreateConnectionCreated{}
}

// WithPayload adds the payload to the create connection created response
func (o *CreateConnectionCreated) WithPayload(payload *models.ServiceManagerConnectionResponse) *CreateConnectionCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create connection created response
func (o *CreateConnectionCreated) SetPayload(payload *models.ServiceManagerConnectionResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateConnectionCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CreateConnectionDefault generic error response

swagger:response createConnectionDefault
*/
type CreateConnectionDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateConnectionDefault creates CreateConnectionDefault with default headers values
func NewCreateConnectionDefault(code int) *CreateConnectionDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateConnectionDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create connection default response
func (o *CreateConnectionDefault) WithStatusCode(code int) *CreateConnectionDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create connection default response
func (o *CreateConnectionDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create connection default response
func (o *CreateConnectionDefault) WithPayload(payload *models.Error) *CreateConnectionDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create connection default response
func (o *CreateConnectionDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateConnectionDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Code generated by go-bindata.
// sources:
// schemas/jsonschema-draft-04.json
// schemas/v2/schema.json
// DO NOT EDIT!

package spec

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _jsonschemaDraft04JSON = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x57\x3b\x6f\xdb\x30\x10\xde\xfd\x2b\x04\xa5\x63\x52\xb9\x40\xa7\x6c\x45\xbb\x18\x68\xd1\x0c\xdd\x0c\x0f\xb4\x75\xb2\x19\x50\xa4\x42\x51\x85\x0d\x43\xff\xbd\xa4\xa8\x07\x29\x91\x92\x2d\xbb\x48\xb4\xc4\xe1\xbd\xbe\x3b\xde\x8b\xe7\x45\x20\xbf\x10\xc7\xe1\x73\x10\x1e\x84\xc8\x9e\xa3\xe8\x35\x67\xf4\x29\xdf\x1d\x20\x45\x9f\x19\xdf\x47\x31\x47\x89\x78\x5a\x7e\x8d\xf4\xd9\x43\xf8\xa8\x85\x3e\xe9\xff\x67\x48\xc6\x90\xef\x38\xce\x04\x66\x54\x49\x7f\x67\x1c\x02\xcd\x12\xa4\x20\x50\xad\xa2\xe3\x4e\x30\xc5\x8a\x39\x97\xdc\x1a\x71\x45\xd0\x6c\xdf\x38\x47\x27\x8b\x50\x11\xc5\x29\x03\xa5\x1c\x55\xe4\x47\x9b\x98\x62\xba\x12\x90\x2a\x7d\x5f\x7a\x24\x5c\x9f\x9f\xa5\x83\x1c\x12\xa5\xe2\x21\x0c\xca\x96\xa9\xec\xf8\xc3\x8c\xe5\x12\xd7\x5f\x58\x51\x01\x7b\xe0\x7e\x10\xb8\x66\x18\xc2\xc0\x69\x91\x4a\x8e\xe5\x25\xfa\x7f\x40\x82\x0a\x22\x96\x43\x3b\x88\x90\xdf\x0a\xea\xda\x82\x1d\x19\x91\x8b\xfa\x58\xa5\x21\xc5\x1c\x6b\x9d\x0a\x42\x50\x06\x1b\x27\x8c\x1c\xa7\x19\x81\x3f\xd2\x97\x7c\x68\x1a\x68\xe5\xc0\xba\x8d\x74\x10\x6e\x19\x23\x80\xa8\xfa\xd9\x3a\x1e\x84\xb4\x20\x44\xff\x4d\xb7\xfa\x84\x6d\x5f\x61\x27\xd4\xaf\x5c\x70\x4c\xf7\xa1\xcf\x7e\x45\x9d\x73\xcf\xc6\x65\x36\x7c\x8d\xa9\xf2\xf2\x94\x28\x28\x7e\x2b\xa0\xa1\x0a\x5e\x40\x07\x73\x61\x80\x6d\x6d\x34\x8e\xe9\xd3\x8c\xb3\x0c\xb8\xc0\xbd\xe8\xe9\xa2\xf3\x78\x53\xa3\xec\x01\x49\x18\x4f\x91\xba\xab\xb0\xe0\x38\x74\xc6\xaa\x2b\xca\x7b\x6b\x16\x58\x10\x98\xd4\xeb\x14\xb5\xeb\x7d\x96\x82\x26\x4b\xcf\xe6\x71\x2a\xcf\xb0\x4c\xcd\x2a\xf7\x3d\x6a\x9b\x74\xf3\x56\x5e\x8f\x02\xc7\x1d\x29\x72\x59\x28\xbf\x5a\x16\xfb\xc6\x4d\xfb\xe8\x58\xb3\x8c\x1b\x77\x0a\x77\x86\xa6\xb4\xb4\xf5\x64\x93\xbb\xa0\x24\x88\xe4\x1e\x84\xad\x13\x37\x21\x9c\xd2\x72\x0b\x42\x74\xfc\x09\x74\x2f\x0e\xbd\x9e\x3b\xd5\xbc\x2c\x1f\xaf\xd6\xd0\xb6\x52\xbb\xdf\x22\x21\x80\x4f\xe7\xa8\xb7\x78\xb8\xd4\x7d\x74\x07\x13\xc5\x71\x05\x05\x91\xa6\x91\xf4\x7b\x38\x3d\xe9\x1e\x6e\x1d\xab\xef\x3c\x0c\x74\xbf\x7d\xd5\x6c\xce\x89\xa5\xbe\x8d\xf7\x66\xce\xee\xd1\x86\x67\x80\x34\xad\x8f\xc3\xb3\xae\xc6\x1c\xe3\xb7\xc2\x96\xd9\xb4\x72\x0c\xf0\xab\x92\xe9\x5a\x05\xee\x5c\xb2\x87\xc6\x7f\xa9\x9b\x17\x6b\xb0\xcc\x75\x77\x96\x16\xb7\xcf\x1c\xde\x0a\xcc\x21\x1e\x53\x64\x0e\x73\x4f\x81\xbc\xb8\x07\xa6\xe6\xfa\x50\x55\xe2\x5b\x4d\xad\x4b\xb6\xb6\x81\x49\x77\xc7\xca\x68\x1a\x90\x67\xd7\x78\x3f\x3c\xba\xa3\x8e\xdd\xe8\x7b\xc0\x8a\x21\x03\x1a\x03\xdd\xdd\x11\xd1\x20\xd3\x46\x72\x55\x7d\x93\x0d\xb3\xcf\x34\x52\x46\x03\xd9\x8d\x75\xe2\x0e\x42\xbd\xb9\xdf\xe9\xdd\x34\xb6\x24\x9b\x5b\xa4\x56\x3f\x6b\xac\xd8\x01\x30\x1e\x25\xce\x3a\x77\xc6\x73\xd4\xbd\x96\xc9\xf5\x06\xbc\xca\xf8\x44\xb0\x2e\x09\x5a\xf3\xf5\x3a\x94\x7b\xb7\xa8\x9f\x7f\x17\x8e\x58\x53\xb2\x0e\xfc\xf5\x92\x8c\xc2\x4c\x49\xca\x84\xe7\x7d\x5d\xb6\x2f\x7e\x4f\x79\xba\x96\xe6\x75\xb7\x87\x9b\x0d\xdc\xb5\xbd\xae\xbb\x85\xb8\x8e\x64\x67\xd1\xe8\x18\xe5\xe2\x5f\x00\x00\x00\xff\xff\x4e\x9b\x8d\xdf\x17\x11\x00\x00")

func jsonschemaDraft04JSONBytes() ([]byte, error) {
	return bindataRead(
		_jsonschemaDraft04JSON,
		"jsonschema-draft-04.json",
	)
}

func jsonschemaDraft04JSON() (*asset, error) {
	bytes, err := jsonschemaDraft04JSONBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "jsonschema-draft-04.json", size: 4375, mode: os.FileMode(420), modTime: time.Unix(1441640690, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _v2SchemaJSON = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x5d\xdb\x72\xdc\x36\xd2\xbe\xf7\x53\xa0\x26\xae\x92\x5d\x91\x35\x4e\xfe\xff\x66\x7d\x93\xd2\xc6\x4e\xa2\xdd\x78\xa5\xf2\x38\xbb\x17\x5e\xb9\x0a\x43\x62\x24\x24\x3c\x4c\x08\x52\xd2\x6c\x56\xef\xbe\x8d\x03\x0f\x20\x01\x12\x3c\x8c\x34\x8a\x99\xaa\x48\xf2\x4c\xa3\xd1\x68\x34\xd0\x5f\x37\x9a\xe0\x1f\xcf\x10\x5a\xa4\x34\x0d\xc8\xe2\x0d\x5a\x9c\xa2\xbf\xad\xce\xff\x81\x56\xde\x35\x09\x31\xda\xc4\x09\x5a\xdd\xe2\xab\x2b\x92\xa0\x6f\x4f\x5e\xa3\xd3\x8b\xb3\x93\xc5\x31\x6f\x40\x7d\x4e\x7d\x9d\xa6\xdb\x37\xcb\x25\x93\x24\x27\x34\x5e\xde\x7c\xbb\x64\xa2\xed\xc9\xaf\x2c\x8e\xbe\x92\xc4\xcf\xe5\x47\x95\x16\xfc\xcb\x57\x8a\x30\x4e\xae\x96\x7e\x82\x37\xe9\xab\xd7\xff\xaf\x1a\xab\x76\xe9\x6e\x2b\x84\x8a\xd7\xbf\x12\x2f\x95\x9f\x25\xe4\xf7\x8c\x26\x84\x77\xff\x69\xa1\x3a\x5e\x1c\x83\x40\xd1\x26\xe6\xbf\xb7\x38\xbd\x66\x8b\x4b\x41\x8b\x7d\x9f\xa6\x34\x8e\x70\x70\x91\xc4\x5b\x92\xa4\x94\x30\x68\xb7\xc1\x01\x23\x82\x00\x88\x53\x92\x44\xda\xb7\x5c\x1f\xf0\xd5\xe7\xbb\x57\xc5\x3f\xf8\x10\x12\xb2\xe1\xa2\x7c\xb5\xf4\xc9\x86\x46\x82\x2d\x5b\xde\x90\xc8\x8f\x93\x77\x77\x29\x89\x18\x7c\xb0\x10\xd4\xf7\xf0\xf3\x5e\xb2\x37\xf0\xcd\x45\xae\xf0\xce\x87\xc9\xd2\x84\x46\x57\x62\x98\xe2\x73\x12\x65\xa1\x18\x26\xa8\x5e\x8e\x48\x7c\xec\x13\xe6\x25\x74\xcb\x25\xe0\xad\x3e\x5e\x93\x62\x8e\x6e\x48\xc2\xe5\x40\xf1\x06\xa5\xd7\x94\x21\x3f\xf6\xb2\x90\x44\xe9\x89\x92\x4c\xf2\x90\xba\xea\x1c\x9c\xa0\xd2\xda\x5d\xc7\x2c\x75\x11\x5c\xa9\x95\x7f\xf5\xf9\xd3\xe7\x3f\xee\x97\xe8\xcd\xbf\xe1\xbf\xcb\xaf\x5f\x7c\xf7\x06\xfe\xf2\xbf\x7e\xf9\xdd\xf3\x45\xdb\x78\x78\x47\xe8\x45\x84\x43\x82\xc0\x02\xe9\xf6\xa5\x1c\x11\x11\x06\x88\xde\xdd\xe1\x70\x1b\x90\x37\xe8\xa8\x34\xbc\x23\x5d\xd2\x35\x66\xe4\x02\x2c\xa1\xaf\xb4\xcb\x56\xb1\x38\x57\xc4\x0d\x0c\xa5\xb1\x49\x9c\x25\xde\xd2\xa3\x9a\xae\x85\x41\x57\x0c\xc0\xaa\x6e\x45\xf8\x33\x05\x1d\x6b\x1c\x3c\xf8\x36\xab\xb1\xa8\x09\x77\x8a\x02\x68\xc6\x95\xf4\xfe\xec\xfd\x3b\xc4\x47\xca\x10\xf6\x3c\xb2\x4d\x89\x8f\xd6\xbb\x42\xd8\x72\x78\x66\x21\x42\xe2\x53\xfc\x11\x9a\x37\xc5\x00\x63\xf6\x33\xaf\xbf\x18\xaa\x6b\xe4\xe1\x08\x29\x1e\xa3\xc4\x10\xeb\xbb\x53\x9b\x92\x4c\x6b\x59\xf9\xba\xbb\x7d\x95\xb8\xd6\x7f\x02\x66\x09\x06\xe3\x24\x84\xa2\x7d\x6b\xe3\x96\x10\xb6\x85\x0f\x5d\xec\x23\x27\xb5\xf2\x62\xc4\xcb\x12\x9a\xee\x1c\x4c\x2d\xa7\x34\xb6\x7f\xdb\x47\x4f\xa6\x46\x1a\xd7\x14\x5f\x31\xd3\x2a\xc4\x49\x82\x77\xa5\x1d\xd0\x94\x84\x55\x3a\x6b\x87\xc0\x6f\xa1\x68\xee\x8b\xd6\x59\x44\x7f\xcf\xc8\x99\xe2\x91\x26\x19\xd1\x64\x20\x77\x7c\x81\xe3\xe0\x6d\xec\x39\x0c\x49\xa3\xae\xed\xe8\x26\x1b\x6a\x6c\xa7\x06\xb7\x65\x5a\x2d\x3f\x92\x88\x24\x38\x40\xbc\x79\x12\x62\xfe\x31\xc2\xeb\x38\x4b\x0d\xab\x55\xf3\x7a\x6a\x97\xe7\xde\x4e\xfa\xed\xd2\x37\x74\x79\xbc\x7c\x09\x59\xbc\x9e\xf8\x5a\xf7\x7c\x2d\x8a\x32\x7a\xbf\x5c\x5f\xfa\x04\x19\x3c\xa1\x54\x95\xc2\x1d\x5a\x6f\x96\x8d\xda\xa4\xc3\x53\x24\xa7\x1e\xe1\xc8\x87\xdd\x85\x78\x14\x76\x68\xc1\xb4\xea\x31\x2a\x92\x95\xcc\x0a\x35\x8e\xe9\x9d\x01\x58\x89\x52\xea\x15\x9e\x17\x5c\xf6\x1a\x1c\x71\x67\xe7\x3a\xa7\xe1\x02\x04\x71\xc4\x1d\x7f\xe5\x73\xcd\x55\xae\xae\xe3\x2c\x00\x0f\x40\x90\x4f\x37\x1b\x92\x00\x16\x40\x9b\x24\x0e\x05\x85\xd0\xd3\x09\x42\x3f\xd2\xf4\xa7\x6c\x8d\x7e\x08\xf0\x4d\x0c\x36\x86\xde\xe3\xe4\x37\x3f\xbe\x8d\x10\x20\x08\x1c\x04\xf1\x2d\xf1\x2d\xa3\x00\x33\x0a\xd9\xf9\x66\x45\x92\x1b\xea\x8d\x99\x47\xee\x5d\x05\x33\x2e\x3d\x93\xec\x04\xfa\x6c\xd7\x22\xb8\xc6\x14\x7b\xa9\x9b\xb9\xe6\xc4\x46\x4e\x01\x74\x08\x9b\xab\x1b\xa7\x9c\xb8\x69\xf0\x75\xc7\x5d\x93\xce\x75\x6b\xf8\x5e\xb6\xd4\xb6\x86\x5c\x1b\x30\x31\x60\x6b\x9a\x85\xf5\x5c\xfe\x96\xb5\xc8\xe1\xd6\xc8\x29\xa4\x3e\x18\x18\xdd\xec\x80\x16\x49\xf4\x26\xa5\x54\x9a\x40\xd0\x2f\x00\xff\x25\x20\x7e\x1c\xd1\xff\x88\x71\x59\x66\x36\x4b\x82\x91\xb2\xfc\xf2\xe1\x67\xb4\x8d\x29\xc8\x03\xc2\x28\xbc\xe6\x35\xf5\x7a\xa2\x33\x92\x9f\x73\x1e\xe0\xd6\xcc\xa2\xc1\x92\xa7\x63\x85\x13\x3c\x10\x4c\x17\x78\x75\xe6\xa4\x25\x8b\x94\x52\x98\xb6\x9d\xf7\xc1\x36\x7b\xcd\xf6\x9b\xeb\xc9\x6a\xfb\x9a\x6f\x13\x46\xd8\xd7\x9f\xed\xcf\xa0\xab\x46\xac\x86\x24\x60\xed\x09\x3a\x4b\x8f\x18\x22\x91\x17\x67\x09\xbe\x82\x4d\x13\x2c\x2c\x63\xdc\x0f\xa1\xf3\x15\x80\xdd\x38\x04\xc5\xd3\x75\x50\x34\x7b\x50\x3b\x2f\xfa\x74\xb2\xed\x43\xb1\x99\x06\xb4\x77\xdc\x2d\x3f\x90\x00\x74\x7d\x23\x43\x33\x96\xeb\x80\x46\x3e\xbd\xa1\x7e\x06\x08\x0b\xc4\x10\x1a\x62\x27\x08\x34\xb6\x43\x61\x06\x51\x0a\xf8\xc4\x24\x6f\xa8\x9a\x1c\xe5\x61\xe3\xd1\x49\x23\x3c\xdc\xa3\x32\x2a\xe6\x00\x01\xa8\x13\x33\x3e\x52\x0e\x77\xdb\x66\xb1\x6d\xed\xb8\x04\x46\x36\xed\x5b\xf8\x76\x22\x77\x95\x04\x6a\xc8\x59\x9b\xcd\xf3\x48\x04\xfd\x21\x40\x11\x99\x8b\x92\xfd\x33\x85\x71\xd6\xc2\xcc\x61\xb2\x24\x3b\x06\xf3\xc8\x3f\x51\x41\xb2\xaf\x80\xa0\x08\x33\xf5\xc8\xd7\x1c\xc5\x59\x82\x9d\xa9\xc7\x5e\xf4\xd7\x7f\xf8\x09\x01\x5c\xcb\xc0\xaf\x0a\x47\xc0\x04\x0e\xa8\x04\xa1\xda\xb0\x4c\x31\xe2\x1e\x47\x95\x77\xb7\xdf\x41\xd9\xa2\xb7\x9e\xa3\xd1\x7d\x46\x4d\xc0\x66\x0c\x96\xf7\x5a\xe4\xd0\xc4\x97\x16\xaf\xc5\x77\xf1\xcb\x4e\x7f\xe4\x8e\xf9\xa7\x70\x15\x87\xbe\xdb\x13\x99\x36\x1b\x33\xa5\x8d\x40\x3f\xa4\x21\xf9\x28\x79\x74\xa6\xfd\x0c\xae\xb4\xc8\x5a\xe5\x2e\xff\xa7\x8f\x1f\x2f\x50\x08\x10\x0d\x5c\x7c\x6d\x07\xe1\x62\xe0\xda\x54\xba\x41\x9c\x32\xe7\xf3\x84\xe3\x76\x3d\xab\xa3\x0d\x5e\xcf\xec\x88\xaf\x9a\xd9\x1d\xd3\xd4\x54\xbe\xbc\xd7\x9a\x5b\xd2\x3b\x35\xc2\x05\x38\x80\x10\x27\xbb\x51\xf1\xf4\x3a\xa1\x04\x22\x50\xc9\x29\x37\x83\x62\xae\x1f\x2d\x98\x2f\x24\x38\x1e\x11\xad\x5b\x36\x52\xf1\x9d\x6b\x2a\xac\xce\xb3\x10\xec\xcc\x9f\x22\x8d\xa3\x02\x48\x5a\xa6\x50\xba\x74\x6f\x48\x4b\x5b\x94\xdb\x33\x35\xdd\xa2\x16\x43\x7a\xba\x2e\x96\x21\x69\x3f\x48\x2c\xc5\x67\x2a\xb1\x8c\xd9\xeb\x16\x96\x25\xbd\x9d\xa7\x29\x87\xdd\xc2\xb2\x24\x37\x2f\xe2\xc6\x79\x49\x0b\xaf\xc6\x99\x49\x9d\x9b\xcf\x71\x86\x87\x53\x62\xb5\xce\x75\x1c\x07\x04\x47\x75\xf3\xdc\xe0\x2c\x48\x35\xb4\xdc\x10\xb4\x99\x6e\x6f\x93\x54\x4b\xb9\x0b\x5e\xd6\x18\x48\x00\xfb\xa9\x80\xce\x01\x39\x0d\xc5\xb8\x37\xf0\xb9\x22\x8e\x19\xbe\xd2\x27\x9b\x8d\x3f\x9b\x88\x8f\x7e\x0c\x3a\x9c\x91\x4f\x02\x58\x5b\x93\xb0\x8a\xb7\x75\xb4\x3f\x9c\xd7\x35\xc1\x8d\xe5\x32\x4c\x51\x38\xf5\xae\x27\xe2\x34\xd1\xbe\x65\x5c\x74\xc6\x53\x38\xe7\xe4\x83\x6c\x5b\x84\xa9\x3c\x65\xc4\xc4\xde\x4d\x28\xec\xe4\x09\x4f\x34\xe0\x68\x87\x6e\x70\x40\x7d\x89\x28\x19\x04\x13\x19\xd0\xc4\xbe\x08\x8b\x8e\xd4\x76\x53\xcd\x3a\x84\x54\x5f\xb2\xdf\x4c\xbb\xea\x5f\x7c\x7a\xfd\xea\x2f\x97\x7f\xfc\xdf\xfd\xcb\xe7\xff\xfd\xfc\x42\xf5\xff\xf2\x79\xbf\x1d\xfc\x9f\x38\xc8\x88\x25\x8f\xb1\x87\x6d\x25\x8a\xd3\x1a\x08\x35\xcf\x90\xa3\x8e\x3a\xb5\x64\x1c\x46\xff\x81\x94\x43\xe9\x32\x3f\xa9\xcf\x8a\x09\xc6\x11\x39\xe7\x5d\x7d\x1a\x10\x89\x77\x47\xef\xbc\x06\xe7\x03\x11\x87\x42\x5e\xd9\xf0\xd2\x28\x5a\xef\x20\xa7\xba\x4a\xf6\x1e\x19\x17\xe5\x45\x5a\x4b\x83\xf6\x5a\xb4\xa1\x67\xa7\x1a\x3a\x6c\x69\xb9\xa1\x01\x59\x35\x5b\x5f\x5a\xf7\x56\xe7\x5d\x2c\x27\xb6\xa0\xf9\x46\xfc\xdc\xc2\xaa\xa0\x6e\x59\x60\x07\x86\x27\x34\x43\x6c\xea\x6d\xf2\x6c\x96\xec\x62\xd1\xd2\xfd\x64\xa0\x4c\x5b\x2a\x82\x53\xf7\x1a\x49\xf5\xbc\x86\x26\x84\x29\xc4\x2a\xaa\xc7\xf2\x2f\x61\x07\x15\x87\xd3\xb2\x5a\x2e\x25\xaa\x70\xae\x00\xc0\x79\xe4\x6e\x36\xdc\x22\x9d\xd4\x7b\x75\x9a\x82\x7f\x9b\xdb\x4e\x68\x48\x79\x46\x9e\xc9\x60\xdf\xc8\xcf\x8b\x83\x00\x54\x0e\x0d\x7e\x30\xca\x64\x3b\xfd\xad\xb5\xb2\x20\xb2\x1c\xf8\x3b\xb0\xcc\x89\x8d\x9c\x42\x7c\x47\xc3\x2c\x74\xe3\x94\x13\x5b\x16\xba\x17\x64\x0c\x94\xf2\xbe\x0f\xcb\x46\x2b\xb3\x94\x40\xef\x2e\xa5\x22\xee\x90\xb2\x0f\xcb\x46\x2b\x9b\x2e\x7f\x26\xd1\x55\xea\x88\x25\x4b\x72\xdb\x98\x7b\x71\x2b\xc8\x6d\x18\x57\x55\x0f\xba\x1d\xdb\x08\x62\xdb\x28\xcf\xdc\x97\x4a\x41\x6d\x1b\x63\x1f\x5e\x39\xb5\x91\x97\x9e\x7d\x73\x60\x57\x6d\x60\xb6\x95\xc8\xd9\x3e\x22\xab\x4d\xc0\xca\xa3\xe0\xd1\xce\x1b\x21\xa5\x65\x8c\x25\xbd\x65\xe5\xf7\x87\x20\x0d\x0f\xfa\x48\xce\xb1\x4e\xde\x52\xa1\x09\x81\x88\x72\x30\x3b\x1e\x86\x24\xe2\xd4\xf8\x16\x02\x15\x74\xf7\x8a\x67\x10\x45\x94\xd2\x5d\x51\xc2\x73\xb0\x06\x1a\x6b\x05\xde\x3a\xf6\x77\x17\xc5\x19\xd8\xa0\xa2\x00\xe1\xb5\xf8\x4f\x85\xd4\x2e\x0f\x31\xc5\x31\x55\x26\x58\xa6\xa1\x0d\x89\xe0\x22\xb0\xe5\x47\xd9\x94\xc7\x90\xbc\xbe\x4b\x54\x8e\x50\x88\x38\x15\xca\xe3\xd4\x19\x1b\x57\xdb\x35\x71\xf5\x44\x29\xb8\x05\x25\x8c\x51\xd8\x5b\xce\x18\x76\x31\x95\x3c\x0d\x62\x0f\x9b\x95\x66\x81\x48\xdc\x3c\x2d\xb8\xa7\x62\x88\x7d\xf2\x87\x36\xf1\x6e\xaf\x89\x48\x0a\x40\xd8\x0f\xf1\xac\xac\xd2\x2f\xc4\xe3\x93\x92\xf7\xc7\x29\x64\x52\x07\x07\x27\x03\xb2\x93\xc6\x90\xc8\x2d\xf4\x19\x51\x4a\x20\x71\x72\xb1\xd2\x57\xd9\x7a\x55\x17\xe4\xd0\xc2\x8c\xce\x35\xfd\x44\x2d\xe0\x51\x17\x94\x8a\x97\xcc\x4b\x6a\xde\x24\x87\x6e\x92\x93\xc6\x80\x95\xc0\xaf\x12\x0e\xce\x31\xe0\x1c\x03\xb6\x49\x39\xc7\x80\x4d\x6e\x73\x0c\xf8\x84\x63\x40\x63\x44\x05\xb2\x27\xbb\x19\xc6\x7c\xe9\x30\x46\x98\xc1\x8c\x62\x26\x46\x31\x42\x98\x77\xe1\x36\xdd\xd5\x4f\xbc\x5c\x0c\x52\x33\x99\x36\xb1\x44\x37\x0c\x31\x58\x3a\x3c\xc9\x81\x2b\xe6\xb9\xde\x29\x81\xa3\x60\xc7\xed\x53\x24\x40\xf8\x89\x2d\x17\x8a\xe7\x40\x32\x5b\xbd\xfe\x8c\xc0\x54\xd3\x69\x10\xd8\xbf\x40\xf1\xef\xf9\xae\x3c\x43\x31\x34\x43\xb1\x19\x8a\xcd\x50\x0c\xd5\xa1\x18\xdf\xf2\xde\xe2\x14\xcf\x68\xec\x4b\x47\x63\xb9\x25\xcc\x80\x6c\x06\x64\x75\xe1\xf6\x0f\xc8\xe0\x0f\x5e\xe9\x33\x03\x33\x34\x03\xb3\x0e\x29\x67\x60\xd6\xe4\x36\x03\xb3\x3f\x1b\x30\xe3\x8f\x2a\x3c\x4d\x50\x56\x7b\x1c\x4f\xfd\xa3\xbb\x04\x6f\x10\x68\xcb\x1d\x4e\xe5\x33\x5e\x1e\x71\xb9\x5f\x64\x77\x78\xe8\x8d\x9b\xcb\x8c\xdc\xe6\x03\x41\x49\x73\x98\xa8\x67\x06\x3b\x68\x06\x3b\x33\xd8\x99\xc1\x0e\xaa\x83\x9d\x28\x8e\xfe\x3a\x61\x0d\x63\xad\xe6\xdf\xfd\x41\x1f\x6b\x81\x55\x01\x72\x50\x27\x8f\x96\x8c\x5a\x0f\x2e\xb6\x23\xd2\x1e\x2c\x2c\x08\x32\xe7\x70\x59\x83\x9b\x06\xd5\xbb\x2b\x4e\xaf\x40\xed\x21\x64\x63\xe6\xcd\xe2\x35\x0a\xee\x5c\x1f\x20\x3c\x05\xc0\x22\x91\x15\x65\xd5\x9b\x04\x01\x01\x60\xed\x32\x66\xc9\xe7\x41\x6f\x26\x6a\x20\xe7\xa9\x1f\xed\x1d\x0e\x20\x8c\x37\x47\xe6\xe3\x73\xbc\x65\x7a\x59\x0e\x67\x29\xf9\xf5\x85\xa7\x23\x3a\xac\x72\x1d\x02\x3b\x06\x75\xd9\x86\x4d\x3a\xf7\xce\x01\x3d\x76\x55\xdd\x77\x00\xa2\x21\x3d\x4e\x81\x9a\x06\xf4\x3b\x09\xb4\x1a\x32\xde\x29\xf0\xd7\xa8\xf1\x8e\x02\x69\xae\x3d\x6b\x6e\x23\x66\x22\x1e\x38\x53\x41\xca\x30\x40\x37\x41\xcf\x6f\xe5\x7a\x7a\x3d\x08\x04\x0e\xd0\xf9\x28\xa4\xb8\x4f\x4d\xef\xbb\xe3\x76\x45\x3b\x60\xd1\x01\xca\xee\x04\xac\xa0\x70\xfb\x93\xe3\x0f\xa1\xf5\x07\xe9\xbd\x5d\xf5\xb6\x8c\xd8\x18\x01\xa4\xd7\x3f\x15\x69\x87\xde\x91\xc2\x90\x9d\xcc\x1a\x4e\x74\x3e\x49\xcc\x69\xa2\xdd\xc4\x4f\x99\xd7\xb3\x89\x55\xe2\x7a\xd6\xb0\x40\x08\xf7\x66\x90\x64\x48\x0f\x8d\xc1\x48\x9c\x9d\xb1\x23\x63\x3a\x67\x7f\xaa\x69\x5e\x31\xa6\xef\x43\xdf\xd4\xbe\x32\xdf\x3f\xd6\x43\x14\x54\xb9\xc4\xa1\xff\x34\xe0\x20\x68\xa2\xaa\x96\xeb\xd2\x6c\x23\xb1\xdd\xa3\xe6\xac\x50\xb3\x9f\xb2\xda\xb6\xf5\x82\x0d\xb7\xb5\xd1\x6b\xaa\x7b\x29\xd4\xa7\x1c\x3b\x83\x9a\x70\x1a\x27\x43\xa2\x87\x04\xc2\xe8\xf3\x28\xb0\xde\x15\x37\xf8\x56\xa8\xbb\xb0\x71\x49\xa3\x59\x07\x9c\xd0\x82\xd9\xa6\xbf\xa5\x4d\x65\xb8\xab\x0a\x2d\x63\x3a\xe7\x87\xbb\x2a\x17\x5d\x7c\xa1\x61\xee\x1c\xae\x1e\x4c\xb8\xfa\x28\xc8\x63\xf0\x71\x4b\x4b\xe5\xc8\xde\xb6\xa2\xc3\xdd\x48\xea\x27\x3a\x0e\xbb\xc9\xa8\x8b\xe0\xe7\xab\x53\x54\xd3\xf9\x94\x6c\x3e\x25\xeb\xd2\xe6\x7c\x4a\x36\x9f\x92\xf5\x38\x25\x7b\x04\x98\xa6\xf9\x12\xd3\x5b\xcf\xc6\xbe\x63\x2c\xe7\xf9\x41\x62\x0c\x7e\xfb\xfb\xa2\x31\xde\x8e\x77\x8e\x99\x78\x0c\xf7\x73\x4d\x67\xd6\x88\x1b\xcd\xce\xc2\xe9\x62\x79\xdb\xf5\xda\xba\xa6\xf5\xd0\x66\x3f\x9e\xda\xa1\x7c\xc6\x38\x04\x71\xe9\xe6\x16\x77\xbe\x83\xca\xbc\x0f\x81\x11\xd0\xbb\x21\x2d\xc1\xe4\x13\xba\xce\x9a\x77\xb8\x8e\x06\x6f\xb7\x09\xde\x6e\xa7\xba\xb5\xf8\x50\xd6\x2a\x7f\x77\xdf\x54\x16\xd4\xf6\xd6\xa0\xa9\xad\x6b\xe4\xf5\x94\x93\x01\xf1\x43\x99\xc7\x8e\x37\x45\x0e\xdf\xdb\x8c\x57\x76\xda\x0e\xf4\x31\xa3\xde\x69\x96\x5e\xf3\x1b\xe3\x65\x2d\xe2\xaa\x79\xc9\xf6\xb1\xcb\xf0\xf1\x96\xfe\x9d\xec\x86\xb6\x8e\x31\x08\xf1\xed\x19\xc4\x45\xd4\xa3\xe9\x38\x2e\x17\x98\xb1\xdb\x38\xf1\xc7\x71\x39\xdd\x72\x59\x46\xa9\x44\x31\xf2\x3c\xc2\xd8\xf7\xb1\x4f\x0c\x7c\x2e\x8d\xb6\xd1\x36\x2d\x7b\x59\xfb\xfb\xbe\x3e\x53\x0c\x68\x74\xe1\xea\xe1\x2d\xe2\x9a\xd1\xef\x6f\x6e\x8e\x51\xb5\xf8\x69\x8f\x33\x25\x47\x64\x99\xaa\xa1\x7b\x7f\xbf\x9a\xe9\xfa\x05\x48\xc7\x68\xa2\x3b\x04\x0e\xcf\x7e\x2c\xdb\xde\x5e\xed\x68\x13\xc4\xb7\x22\xdb\x02\x5d\xc7\x89\x7a\x37\xe2\x2f\x4e\x2f\x5f\x1a\x6c\x55\x72\x9c\xb6\xd4\x0e\x17\x68\x08\x57\xaa\xf4\x66\xe1\xcb\x3c\x18\x85\xeb\x6d\xfe\x42\xc0\x95\x6c\x61\x86\xa9\x75\x75\xf5\x90\xd8\xe1\x85\x98\x4f\xdf\x8a\x1b\x6e\xf7\x41\xac\x38\x8d\x7f\x23\x4f\xd3\x7a\xb7\x4a\x5f\x0f\x62\xbd\x85\x9a\x66\xab\xd5\xad\xd6\x04\xf3\x66\xc3\xed\x80\x08\x85\xca\x66\xdb\x7d\x54\xdb\x6d\x46\x16\x8f\x83\x1c\x9e\xb6\x39\x17\x5a\xfc\x33\xe0\x88\x79\xb1\x20\xf3\x62\x59\xd5\x67\x71\x82\xf4\xb1\x3e\x64\xbd\x57\xfd\x45\x72\x13\x26\xd6\x8b\xf7\x73\x36\xf4\xdb\x91\x4d\xaf\xbd\xcf\xa9\x5b\x24\xc3\x73\x95\x25\x0f\x14\x11\xe2\xcb\x77\x76\xf3\xcb\x28\x10\x56\x2f\x67\x92\x2f\xdd\x0b\x02\xe3\xfd\xe7\xb9\x6c\xfa\x66\x63\x18\x7a\x9f\x24\x56\xe3\xbd\xc0\xae\xf9\x19\xe3\xcb\x7b\xaa\x49\x19\xe7\x73\x8a\xca\x2b\xf4\x06\xa9\x35\x4d\x70\xc4\x40\x10\x7e\xaf\x7c\x1a\x7b\x71\x90\x3f\xbb\x2a\xde\xba\xdc\xa6\x28\xeb\xba\xae\x84\xd1\x69\xba\xe5\x5b\x34\xff\xcd\xf8\x1f\xb7\xea\x27\x5b\xf4\x1e\x69\xcb\xe1\xb7\x4d\x94\x52\x10\x8f\xdd\x88\xbb\xe7\xe5\xaf\x54\xfe\xda\xd2\xad\xf6\x16\xd7\x32\x01\x2f\xe8\x5b\x7b\x2f\x2f\xd8\x98\x48\x8c\x63\x75\xb0\xe7\x28\x4f\xbd\x20\x69\xa2\x62\xa4\x9c\xbd\x79\xd3\x9d\xb4\x00\xa9\xec\xaa\x5e\x78\x30\x59\xd1\x51\xb1\x21\x9a\x4e\x4c\xa7\x7c\x2e\xa6\xe8\xa8\x51\xa7\x30\xd9\xb3\x30\x79\x17\x2d\x35\x11\xd3\x3f\xff\x52\x8c\xab\x51\xd9\x30\xd9\x33\x2f\xcd\x71\x4d\xda\x97\xb9\xcc\xa2\x32\x5f\x8d\x82\x88\xe9\x6b\xff\x2b\x5a\xdc\x6b\x6f\x7a\xad\x7f\xe9\x7b\xeb\x65\x1a\x93\x3d\xc3\x52\x51\x63\xa3\x12\x6c\x9f\x5a\xdc\x67\x67\x66\x25\x9a\x2b\x41\x26\x7d\x3e\xa5\x58\x08\xd1\x74\xc6\x1f\xd5\x0d\x5e\xc7\x1d\x0e\x88\x54\x8b\xc6\x84\x28\x97\xd3\x94\x0a\xf4\x7a\xe4\x54\x87\xb9\xcf\xf8\xff\xf7\xcf\x9e\xfd\x2f\x00\x00\xff\xff\x5a\x5b\x09\x2a\xfb\x94\x00\x00")

func v2SchemaJSONBytes() ([]byte, error) {
	return bindataRead(
		_v2SchemaJSON,
		"v2/schema.json",
	)
}

func v2SchemaJSON() (*asset, error) {
	bytes, err := v2SchemaJSONBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "v2/schema.json", size: 38139, mode: os.FileMode(420), modTime: time.Unix(1442095555, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"jsonschema-draft-04.json": jsonschemaDraft04JSON,
	"v2/schema.json": v2SchemaJSON,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"jsonschema-draft-04.json": &bintree{jsonschemaDraft04JSON, map[string]*bintree{
	}},
	"v2": &bintree{nil, map[string]*bintree{
		"schema.json": &bintree{v2SchemaJSON, map[string]*bintree{
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


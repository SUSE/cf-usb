#!/bin/bash

pidfile="/var/vcap/sys/run/cf-usb/cf-usb.pid"

function random_uuid()
{
    echo -n "`cat /dev/urandom | tr -dc 'a-f0-9' | fold -w 8 | head -n 1`-`cat /dev/urandom | tr -dc 'a-f0-9' | fold -w 4 | head -n 1`-`cat /dev/urandom | tr -dc 'a-f0-9' | fold -w 4 | head -n 1`-`cat /dev/urandom | tr -dc 'a-f0-9' | fold -w 4 | head -n 1`-`cat /dev/urandom | tr -dc 'a-f0-9' | fold -w 12 | head -n 1`"
}

function start()
{
    # create log directory if it doesn't exist
    [ ! -d /var/vcap/sys/log/cf-usb/ ] && mkdir -p /var/vcap/sys/log/cf-usb/

    # wait 120 seconds for nfs to mount the share
    cnt=1
    while [ $cnt -le 40 ];
    do
	[ -z "`mount|grep /var/vcap/nfs`" ] && \
	{
	    cnt=$(( $cnt + 1 ))
	    echo "nfs share not yet mounted. Sleeping 3 seconds" >>/var/vcap/sys/log/cf-usb/cf-usb.log
	    sleep 3
	} || \
	{
	    echo "nfs share is mounted"  >>/var/vcap/sys/log/cf-usb/cf-usb.log
	    break
	}
    done

    export USB_DRIVER_PATH=/var/vcap/nfs/shared/drivers

    # copy the drivers to $USB_DRIVER_PATH
    [ ! -d $USB_DRIVER_PATH ] && mkdir -p $USB_DRIVER_PATH

    for i in /var/vcap/packages/cf-usb/src/github.com/hpcloud/cf-usb/cmd/driver/*;
    do
        [ ! -e $USB_DRIVER_PATH/`basename $i` ] && cp $i/`basename $i` $USB_DRIVER_PATH/
    done

    broker_api='{"external_url":"http://<%= p("cf-usb.broker.external_url") %>","listen":":<%= p("cf-usb.broker.port") %>","dev_mode":<%= p("cf-usb.broker.dev_mode") %>,"credentials":{"username":"<%= p("cf-usb.broker.username") %>","password":"<%= p("cf-usb.broker.password") %>"}}'
    management_api='{"listen":":<%= p("cf-usb.management.port") %>","uaa_secret":"<%= p("cf-usb.management.uaa.secret") %>","uaa_client":"<%= p("cf-usb.management.uaa.client") %>","authentication":{"uaa":{"adminscope":"usb.management.admin","public_key":"<%= p("cf-usb.management.public_key").gsub("\n","\\n").gsub("        ","") %>"}},"cloud_controller":{"api":"<%= p("cc.srv_api_uri") %>","skip_tsl_validation":<%= p("cf-usb.skip_tsl_validation") %>}}'

    curl -X PUT -d "$broker_api" http://<%= p("cf-usb.configconnectionstring") %>/v1/kv/usb/broker_api
    curl -X PUT -d "$management_api" http://<%= p("cf-usb.configconnectionstring") %>/v1/kv/usb/management_api

    <% if p("cf-usb.override") %>
    # override the drivers

    cp -f /var/vcap/packages/cf-usb/bin/drivers/* $USB_DRIVER_PATH/

    for driver in $USB_DRIVER_PATH/*;
    do
	curl -X PUT -d "`basename $driver`" http://<%= p("cf-usb.configconnectionstring") %>/v1/kv/usb/drivers/`random_uuid`
    done
    <% end %>

    # create the pidfile directory if it doesn't exist
    [ ! -d `dirname $pidfile` ] && mkdir -p `dirname $pidfile`

    # start cf-usb only if there's no other instance running
    pidof usb >/dev/null || \
    {
	/var/vcap/packages/cf-usb/bin/usb <%= p("cf-usb.configprovider") %> -a <%= p("cf-usb.configconnectionstring") %> 1>>/var/vcap/sys/log/cf-usb/cf-usb.log 2>&1 &
	echo $! >$pidfile
    }
}

function stop()
{
    kill -9 $(pidof usb)
}

# parse the arguments
case $1 in
    "start") start ;;
    "stop") stop ;;
    *) echo "Unknown argument: $1"; exit 1 ;;
esac

#!/bin/bash

pidfile="/var/vcap/sys/run/cf-usb/cf-usb.pid"

function random_uuid()
{
    echo -n "`cat /dev/urandom | tr -dc 'a-f0-9' | fold -w 8 | head -n 1`-`cat /dev/urandom | tr -dc 'a-f0-9' | fold -w 4 | head -n 1`-`cat /dev/urandom | tr -dc 'a-f0-9' | fold -w 4 | head -n 1`-`cat /dev/urandom | tr -dc 'a-f0-9' | fold -w 4 | head -n 1`-`cat /dev/urandom | tr -dc 'a-f0-9' | fold -w 12 | head -n 1`"
}

function start()
{
    # Get the JWT verification key from UAA
    source ./fetch_uaa_verification_key.sh

    # create log directory if it doesn't exist
    [ ! -d /var/vcap/sys/log/cf-usb/ ] && mkdir -p /var/vcap/sys/log/cf-usb/

    <% if p("cf-usb.configprovider") == "mysqlConfigProvider" %>

    # create the pidfile directory if it doesn't exist
    [ ! -d `dirname $pidfile` ] && mkdir -p `dirname $pidfile`

    # start cf-usb only if there's no other instance running
    pidof usb >/dev/null || \
    {
      /var/vcap/packages/cf-usb/bin/usb \
        <%= p("cf-usb.configprovider") %> \
        --config /var/vcap/jobs/cf-usb/config/config.json \
        --address <%= p("cf-usb.mysql_address") %>:3306 \
        --username usb \
        --password <%= p("cf-usb.mysql_password") %> \
        --database usb \
        1>>/var/vcap/sys/log/cf-usb/cf-usb.log 2>&1 &
      echo $! >$pidfile
    }
    <% end %>

}

function stop()
{
    kill -9 $(pidof usb)
}

# parse the arguments
case $1 in
    "start") start ;;
    "stop") stop ;;
    *) echo "Unknown argument: $1"; exit 1 ;;
esac

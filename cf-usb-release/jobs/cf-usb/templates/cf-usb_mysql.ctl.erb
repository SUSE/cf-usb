#!/bin/bash

set -e

<% if p("cf-usb.configprovider") == "mysqlConfigProvider" %>

function createMysqlConfig {

  # Workaround for retrieving the UAA verification token.
  # This should be done in the usb process itself. 
  # See https://trello.com/c/b60Oegva/431-usb-should-retrieve-the-uaa-verification-key-on-its-own
  source /var/vcap/jobs/cf-usb/bin/fetch_uaa_verification_key.sh

  signing_key="${JWT_SIGNING_PUB//'\n'/'\\n'}"

  /var/vcap/packages/mariadb/mysql -h <%= p("cf-usb.mysql_address") %> -u usb -p<%= p("cf-usb.mysql_password") %> < /var/vcap/jobs/cf-usb/config/usb_mysql_create_db.sql
  /var/vcap/packages/mariadb/mysql -h <%= p("cf-usb.mysql_address") %> -u usb -p<%= p("cf-usb.mysql_password") %> << EOF
INSERT INTO usb.Config (\`KEY\`,VALUE,COMPONENT) VALUES
('EXTERNAL_URL','<%= p("cf-usb.broker.external_url") %>','BROKER_API')
,('LISTEN',':<%= p("cf-usb.broker.port") %>','BROKER_API')
,('REQUIRE_TLS','<%= p("cf-usb.broker.require_tls") %>','BROKER_API')
,('SERVER_CERT_FILE','/var/vcap/jobs/cf-usb/config/broker.crt','BROKER_API')
,('SERVER_KEY_FILE','/var/vcap/jobs/cf-usb/config/broker.key','BROKER_API')
,('DEV_MODE','<%= p("cf-usb.management.dev_mode") %>','MANAGEMENT_API')
,('LISTEN',':<%= p("cf-usb.management.port") %>','MANAGEMENT_API')
,('AUTHENTICATION','{"uaa":{"adminscope":"usb.management.admin","public_key":"$signing_key"}}','MANAGEMENT_API')
,('UAA_CLIENT','<%= p("cf-usb.management.uaa.client") %>','MANAGEMENT_API')
,('UAA_SECRET','<%= p("cf-usb.management.uaa.secret") %>','MANAGEMENT_API')
;
INSERT INTO usb.Config (\`KEY\`,VALUE,COMPONENT) VALUES
('BROKER_NAME','<%= p("cf-usb.management.broker_name") %>','MANAGEMENT_API')
,('API','<%= p("cf.insecure_api_url") %>','CLOUD_CONTROLLER')
,('SKIP_TLS_VALIDATION','<%= p("cf-usb.skip_tls_validation") %>','CLOUD_CONTROLLER')
,('USERNAME','<%= p("cf-usb.broker.username") %>','BROKER_CREDENTIALS')
,('PASSWORD','<%= p("cf-usb.broker.password") %>','BROKER_CREDENTIALS')
,('API','<%= p("cf-usb.api_version") %>','API_VERSION')
;
EOF
    
}

function updateMysqlConfig {
  /var/vcap/packages/mariadb/mysql -h <%= p("cf-usb.mysql_address") %> -u usb -p<%= p("cf-usb.mysql_password") %> < /var/vcap/jobs/cf-usb/config/usb_mysql_update.sql
}


  dbUsb=$(/var/vcap/packages/mariadb/mysql -h <%= p("cf-usb.mysql_address") %> -u usb -p<%= p("cf-usb.mysql_password") %> -e "SHOW DATABASES;" | grep "usb"  || : )
  if [ $dbUsb=="usb" ]; then
    tableConfig=$(/var/vcap/packages/mariadb/mysql usb -h <%= p("cf-usb.mysql_address") %> -u usb -p<%= p("cf-usb.mysql_password") %> -e "SHOW TABLES;" | grep "Config"  || : )
      <% if p("cf-usb.override") == false %>
      if [ -z $tableConfig ]; then
        createMysqlConfig
	  else
	    updateMysqlConfig
      fi
      <% else %>
        createMysqlConfig
      <% end %>
  else
    createMysqlConfig
  fi
<% end %>
